name: Basic Sanity Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
          # Fix the conflicting packages - uninstall one of them
          pip uninstall -y pytest-allure-adaptor
          
      - name: Run tests with Allure
        run: |
          # Create Python 3.10 compatibility patch
          cat > patch_collections.py << EOF
          #!/usr/bin/env python3
          import collections
          import collections.abc
          
          # Apply the patches for all needed classes
          collections.Mapping = collections.abc.Mapping
          collections.Sequence = collections.abc.Sequence
          print("Patches applied: collections.Mapping and collections.Sequence")
          EOF
          
          # Create a simple test runner that generates Allure reports
          cat > run_tests.py << EOF
          import collections
          import collections.abc
          import sys
          import importlib.util
          import os
          
          # Create allure results directory
          if not os.path.exists("allure-results"):
              os.makedirs("allure-results")
          
          # Import the patch
          spec = importlib.util.spec_from_file_location("patch_collections", "patch_collections.py")
          patch = importlib.util.module_from_spec(spec)
          spec.loader.exec_module(patch)
          
          # Run pytest with allure
          import pytest
          sys.exit(pytest.main(["tests/", "--alluredir=allure-results"]))
          EOF
          
          # Run the tests
          python run_tests.py
          
      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/
          
      - name: Generate Allure report
        if: always()
        run: |
          pip install allure-commandline
          allure generate allure-results -o allure-report --clean
          
      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report/ 