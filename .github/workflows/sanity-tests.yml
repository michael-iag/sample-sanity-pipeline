name: Sanity Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install jq for JSON processing
          sudo apt-get install -y jq
          
      - name: Run tests with Allure
        run: |
          mkdir -p allure-results
          # Create Python 3.10 compatibility patch
          cat > patch_collections.py << EOF
          #!/usr/bin/env python3
          # Patch for Python 3.10+ to run pytest with allure
          import collections, collections.abc, sys
          import pytest
          import os

          # Apply the patches for all needed classes
          collections.Mapping = collections.abc.Mapping
          collections.Sequence = collections.abc.Sequence
          print("Patches applied: collections.Mapping and collections.Sequence")

          # Create allure results directory
          if not os.path.exists("allure-results"):
              os.makedirs("allure-results")

          # Run pytest with allure reporting
          sys.exit(pytest.main(["tests/", "--alluredir=allure-results"]))
          EOF
          
          # Run tests with our patch
          python patch_collections.py
        continue-on-error: true
        
      - name: Store Allure results
        if: always()
        run: |
          zip -r allure-results.zip allure-results/
          echo "Allure results zipped"
          
          # Create a simple HTML summary
          TOTAL=$(find allure-results -name "*.json" | grep -v "environment\|categories\|executor" | wc -l)
          PASSED=$(grep -l '"status":"passed"' allure-results/*.json 2>/dev/null | wc -l || echo 0)
          FAILED=$((TOTAL - PASSED))
          
          cat > summary.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>Test Results Summary</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              .summary { display: flex; gap: 20px; margin-bottom: 20px; }
              .card { padding: 15px; border-radius: 8px; color: white; text-align: center; min-width: 100px; }
              .total { background-color: #2196F3; }
              .passed { background-color: #4CAF50; }
              .failed { background-color: #F44336; }
              .number { font-size: 24px; font-weight: bold; }
              .label { font-size: 14px; }
            </style>
          </head>
          <body>
            <h1>Test Results Summary</h1>
            <div class="summary">
              <div class="card total">
                <div class="number">${TOTAL}</div>
                <div class="label">Total Tests</div>
              </div>
              <div class="card passed">
                <div class="number">${PASSED}</div>
                <div class="label">Passed</div>
              </div>
              <div class="card failed">
                <div class="number">${FAILED}</div>
                <div class="label">Failed</div>
              </div>
            </div>
            <p>Run ID: ${{ github.run_id }}</p>
            <p>Repository: ${{ github.repository }}</p>
            <p>Branch: ${{ github.ref }}</p>
            <p>Download the allure-results.zip artifact for detailed test results.</p>
          </body>
          </html>
          EOF
          
      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results.zip
          
      - name: Upload Summary
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: summary.html 